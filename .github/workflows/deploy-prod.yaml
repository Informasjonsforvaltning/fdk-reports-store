name: Deploy to production on merge to master branch

on:
  push:
    branches:
      - master

jobs:
  deploy-production:
    name: Deploy fdk-reports-store to production environment
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Create yaml file from secret
        id: write_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'secret.yaml'
          encodedString: ${{ secrets.DIGDIR_FDK_REPORTS_STORE_PROD }}

      - name: Apply Helm template
        uses: stefanprodan/kube-tools@v1
        with:
          helm: 2.14.3
          command: |
            helm init --client-only
            helm repo add fdk-reports-store https://informasjonsforvaltning.github.io/fdk-reports-store-config/
            helm fetch --untar --untardir ./helm fdk-reports-store/fdk-reports-store
            helm template -f ${{ steps.write_file.outputs.filePath }} ./helm/fdk-reports-store/ > ./kubectlapply.yaml
            chmod o+w ./kubectlapply.yaml
            cat kubectlapply.yaml

      - name: Get kubeconfig file from GKE
        uses: machine-learning-apps/gke-kubeconfig@master
        with:
          application_credentials: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY }}
          project_id: digdir-fdk-prod
          location_zone: europe-north1-a
          cluster_name: digdir-fdk-prod

      - name: Create backup snapshot
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY_EMAIL }}
          service_account_key: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY }}
      - run: |
          gcloud compute --project digdir-fdk-prod disks snapshot "fdk-prod-reports-store" --snapshot-names "autogcs-autodeploy-prod-fdk-reports-store-${GITHUB_SHA::8}" --zone "europe-north1-a" &
          wait
          gcloud compute --project digdir-fdk-prod snapshots add-labels "autogcs-autodeploy-prod-fdk-reports-store-${GITHUB_SHA::8}" --labels="snapshotdays="14""

      - name: Deploy to production
        uses: docker://bitnami/kubectl:latest
        env:
          KUBECONFIG: '/github/workspace/.kube/config'
        with:
          args: "apply -f ./kubectlapply.yaml --force"

      - name: Notify slack of deploy
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"C7NTH118T\",\"text\":\"Application: fdk-reports-store deployed to production\"}'