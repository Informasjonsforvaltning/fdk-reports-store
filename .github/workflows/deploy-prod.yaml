name: Deploy to production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-production:
    name: Deploy fdk-reports-store to production environment on merge to master branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create yaml file from secret
        id: write_file
        uses: timheuer/base64-to-file@master
        with:
          fileName: 'secret.yaml'
          encodedString: ${{ secrets.DIGDIR_FDK_REPORTS_STORE_PROD }}

      - name: Apply Helm template
        run: |
          helm template -f ${{ steps.write_file.outputs.filePath }} ./helm-sources/ > ./kubectlapply.yaml
          chmod o+w ./kubectlapply.yaml
          cat kubectlapply.yaml

      - name: Auth gcloud CLI for backup snapshot & deploy
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY }}

      - name: Create snapshot
        run: |
          gcloud compute --project digdir-fdk-prod disks snapshot "fdk-prod-reports-store" --snapshot-names "autogcs-autodeploy-prod-fdk-reports-store-${GITHUB_SHA::8}" --zone "europe-north1-a" &
          wait
          gcloud compute --project digdir-fdk-prod snapshots add-labels "autogcs-autodeploy-prod-fdk-reports-store-${GITHUB_SHA::8}" --labels="snapshotdays="14""

      - name: Deploy to GCP
        run: |
          gcloud container clusters get-credentials digdir-fdk-prod --region europe-north1-a --project digdir-fdk-prod
          kubectl apply -f ./kubectlapply.yaml --force
          if ! kubectl --namespace=prod rollout status deployment fdk-reports-store; then
          kubectl --namespace=prod rollout undo deployment fdk-reports-store
          kubectl --namespace=prod rollout status deployment fdk-reports-store
          exit 1
          fi

      - name: Notify slack
        uses: 8398a7/action-slack@v3
        with:
          mention: 'channel'
          if_mention: failure
          status: ${{ job.status }}
          author_name: 'Application: fdk-reports-store | Environment: prod'
          fields: commit,author,workflow,message
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
